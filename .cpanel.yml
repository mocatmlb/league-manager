---
deployment:
  tasks:
    # Set deployment path based on environment
    - export DEPLOYPATH=/home/$USER/public_html/district8travelleague.com
    - if [ "$CPANEL_DEPLOYMENT_BRANCH" = "staging" ]; then export DEPLOYPATH=/home/$USER/public_html/staging.district8travelleague.com; fi
    
    # Create necessary directories
    - mkdir -p $DEPLOYPATH/logs
    - mkdir -p $DEPLOYPATH/uploads/documents
    - mkdir -p $DEPLOYPATH/backups
    
    # Copy application files - Copy public contents to root
    - cp -r public/* $DEPLOYPATH/
    - cp -r includes $DEPLOYPATH/
    - cp -r database $DEPLOYPATH/
    - cp -r scripts $DEPLOYPATH/
    - cp -r templates $DEPLOYPATH/
    - cp -r assets $DEPLOYPATH/
    - cp composer.json $DEPLOYPATH/
    - cp composer.lock $DEPLOYPATH/
    - cp README.md $DEPLOYPATH/
    
    # Handle .htaccess file deployment (CRITICAL for environment variables)
    # Backup existing .htaccess with production credentials
    - if [ -f "$DEPLOYPATH/.htaccess" ]; then cp $DEPLOYPATH/.htaccess $DEPLOYPATH/.htaccess.backup.$(date +%Y%m%d_%H%M%S); fi
    
    # Copy new .htaccess from repository (contains placeholders)
    - cp .htaccess $DEPLOYPATH/
    
    # If this is first deployment, copy production template as reference
    - if [ ! -f "$DEPLOYPATH/.htaccess.production.reference" ]; then cp .htaccess.production $DEPLOYPATH/.htaccess.production.reference; fi
    
    # Set proper file permissions
    - find $DEPLOYPATH -type d -exec chmod 755 {} \;
    - find $DEPLOYPATH -type f -exec chmod 644 {} \;
    - chmod 755 $DEPLOYPATH/database/migrate.php
    - chmod 755 $DEPLOYPATH/scripts/*.php
    
    # Make upload directories writable
    - chmod 777 $DEPLOYPATH/uploads
    - chmod 777 $DEPLOYPATH/uploads/documents
    - chmod 777 $DEPLOYPATH/logs
    - chmod 777 $DEPLOYPATH/backups
    
    # Install/update Composer dependencies
    - cd $DEPLOYPATH && /usr/local/bin/composer install --no-dev --optimize-autoloader
    
    # Copy environment-specific configuration
    - if [ "$CPANEL_DEPLOYMENT_BRANCH" = "main" ]; then cp $DEPLOYPATH/includes/config.prod.php $DEPLOYPATH/includes/config.php; fi
    - if [ "$CPANEL_DEPLOYMENT_BRANCH" = "staging" ]; then cp $DEPLOYPATH/includes/config.staging.php $DEPLOYPATH/includes/config.php; fi
    
    # Handle environment variable configuration
    # Check if we have a backup .htaccess with production credentials
    - BACKUP_HTACCESS=$(ls -t $DEPLOYPATH/.htaccess.backup.* 2>/dev/null | head -1)
    
    # If backup exists and contains real credentials, restore them
    - if [ -f "$BACKUP_HTACCESS" ] && grep -q "REPLACE_WITH_ACTUAL" "$DEPLOYPATH/.htaccess" && ! grep -q "REPLACE_WITH_ACTUAL" "$BACKUP_HTACCESS"; then echo "Restoring production credentials from backup"; cp "$BACKUP_HTACCESS" "$DEPLOYPATH/.htaccess"; fi
    
    # Legacy: Create database configuration file if it doesn't exist (fallback method)
    - if [ ! -f "$DEPLOYPATH/includes/config.prod.db.php" ]; then cp $DEPLOYPATH/includes/config.prod.db.template.php $DEPLOYPATH/includes/config.prod.db.php; fi
    
    # Fix production paths using PHP script (more reliable than sed)
    - /usr/local/bin/php $DEPLOYPATH/scripts/fix-production-paths.php
    
    # Backup database before migrations (production only)
    - if [ "$CPANEL_DEPLOYMENT_BRANCH" = "main" ]; then /usr/local/bin/php $DEPLOYPATH/scripts/backup-database.php; fi
    
    # Run database migrations if needed
    - if [ -f "$DEPLOYPATH/database/migrate.php" ]; then /usr/local/bin/php $DEPLOYPATH/database/migrate.php; fi
    
    # Clear any PHP opcache
    - if [ -f "$DEPLOYPATH/scripts/clear-cache.php" ]; then /usr/local/bin/php $DEPLOYPATH/scripts/clear-cache.php; fi
    
    # Verify environment variable configuration
    - if grep -q "REPLACE_WITH_ACTUAL" "$DEPLOYPATH/.htaccess"; then echo "‚ö†Ô∏è  WARNING: .htaccess still contains placeholder values. Update with production credentials!"; fi
    
    # Run post-deployment health checks
    - if [ -f "$DEPLOYPATH/scripts/deployment-monitor.php" ]; then /usr/local/bin/php $DEPLOYPATH/scripts/deployment-monitor.php; fi
    
    # Log deployment
    - echo "$(date): Successfully deployed $CPANEL_DEPLOYMENT_BRANCH branch to $DEPLOYPATH" >> $DEPLOYPATH/logs/deployment.log
    - echo "Deployment completed for branch: $CPANEL_DEPLOYMENT_BRANCH"
    
    # Display post-deployment instructions
    - echo ""
    - echo "üöÄ DEPLOYMENT COMPLETE!"
    - echo ""
    - echo "üìã POST-DEPLOYMENT CHECKLIST:"
    - echo "1. Verify .htaccess contains your production credentials (not placeholders)"
    - echo "2. Test site: http://district8travelleague.com/"
    - echo "3. Test admin login: http://district8travelleague.com/admin/login.php"
    - echo "4. Test coaches login: http://district8travelleague.com/coaches/login.php"
    - echo ""
    - if grep -q "REPLACE_WITH_ACTUAL" "$DEPLOYPATH/.htaccess"; then echo "‚ö†Ô∏è  IMPORTANT: Edit $DEPLOYPATH/.htaccess and replace placeholder values with actual credentials!"; fi
